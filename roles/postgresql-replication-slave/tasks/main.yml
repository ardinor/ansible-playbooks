---

- include: redhat.yml
  when: ansible_os_family == "RedHat"

- name: make postgres ssh directory
  file: path=/var/lib/pgsql/.ssh state=directory owner=postgres group=postgres mode=0700

- name: check if ssh key exists
  stat: path=/var/lib/pgsql/.ssh/id_rsa get_md5=no
  register: key_exists

- name: Creating new SSH key pair for postgres
  command: "ssh-keygen -t rsa -b 2048 -N '' -q -f /var/lib/pgsql/.ssh/id_rsa -C 'PostgreSQL Replication SSH Key for {{ ansible_hostname }}'"
  when: key_exists.stat.isreg is undefined or (key_exists.stat.isreg) == false

- name: ensure ownership is correct
  file:
    path: /var/lib/pgsql/.ssh/
    mode: "u=rwX,g-rX,o-rX"
    owner: postgres
    group: postgres
    recurse: yes

- name: Download postgres pub key
  fetch: src=/var/lib/pgsql/.ssh/id_rsa.pub dest=/tmp/postgres-pub.tmp flat=yes

- name: ensure our key is allowed on the master server
  authorized_key: user=postgres
                  key="{{ lookup('file', '/tmp/postgres-pub.tmp') }}"
                  state=present
  delegate_to: "{{ groups['postgre-master'][0] }}"

- name: add ourself to master's pg_hba.conf
  lineinfile: dest=/var/lib/pgsql/9.4/data/pg_hba.conf
              line="host    replication     rep     {{ ansible_default_ipv4.address }}/32   md5"
  delegate_to: "{{ groups['postgre-master'][0] }}"

- name: add requires lines to local postgresql.conf
  lineinfile: dest=/var/lib/pgsql/9.4/data/postgresql.conf
              regexp="^{{ item.key }}"
              line="{{ item.value }}"
              state=present
              backrefs=yes
  with_items:
    - { key: '#wal_level = minimal', value: 'wal_level = hot_standby' }
    - { key: '#archive_mode = off', value: 'archive_mode = on'}
    - { key: '#archive_command = ''', value: "archive_command = 'cd .'"}
    - { key: '#max_wal_senders = 0', value: 'max_wal_senders = 1'}
    - { key: '#hot_standby = off', value: 'hot_standby = on'}
    - { key: "#listen_addresses = 'localhost'", value: "listen_addresses = 'localhost,{{ ansible_default_ipv4.address }}'"}
