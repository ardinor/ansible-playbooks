---

- include: redhat.yml
  when: ansible_os_family == "RedHat"

- name: list rabbitmq vhosts
  command: rabbitmqctl list_vhosts
  register: exist_vhosts

- name: add sensu vhost
  command: rabbitmqctl add_vhost /{{ rabbitmq_vhost }}
  when: exist_vhosts.stdout.find("{{ rabbitmq_vhost }}") == -1

- name: list rabbitmq users
  command: rabbitmqctl list_users
  register: exist_users

- name: add sensu user to rabbitmq
  command: rabbitmqctl add_user {{ rabbitmq_user }} {{ rabbitmq_password }}
  when: exist_users.stdout.find("{{ rabbitmq_user }}") == -1

- name: add permissions on sensu vhost to sensu user
  command: rabbitmqctl set_permissions -p /sensu sensu ".*" ".*" ".*"
  when: exist_users.stdout.find("{{ rabbitmq_user }}") == -1

- name: Make RabbitMQ SSL directory
  file: path=/etc/rabbitmq/ssl/ state=directory

- name: Copy across CA central for RabbitMQ
  copy: src=../files/cacert.pem dest=/etc/rabbitmq/ssl/cacert.pem

- name: Copy across SSL cert for RabbitMQ
  copy: src=../files/cert.pem dest=/etc/rabbitmq/ssl/cert.pem

- name: Copy across SSL key for RabbitMQ
  copy: src=../files/key.pem dest=/etc/rabbitmq/ssl/key.pem

- name: Install RabbitMQ config file
  template: src=rabbitmq.config.j2 dest=/etc/rabbitmq/rabbitmq.config
  notify: restart rabbitmq

- name: Make sensu SSL directory
  file: path=/etc/sensu/ssl state=directory

- name: Copy across SSL cert
  copy: src=../files/cert.pem dest=/etc/sensu/ssl/

- name: Copy across SSL key
  copy: src=../files/key.pem dest=/etc/sensu/ssl/

- name: Install sensu RabbitMQ config
  template: src=rabbitmq.json.j2 dest=/etc/sensu/rabbitmq.json

- name: Install sensu redis config file
  template: src=redis.json.j2 dest=/etc/sensu/conf.d/redis.json

- name: Install sensu api config file
  template: src=api.json.j2 dest=/etc/sensu/conf.d/api.json

- name: Install sensu client config file to monitor itself
  template: src=client.json.j2 dest=/etc/sensu/conf.d/client.json

- name: Install uchiwa config file to monitor itself
  template: src=uchiwa.json.j2 dest=/etc/sensu/uchiwa.json

- name: Start sensu-server service
  service: name=sensu-server state=started enabled=yes

- name: Start sensu-client service
  service: name=sensu-client state=started enabled=yes

- name: Start sensu-api service
  service: name=sensu-api state=started enabled=yes

- name: Start uchiwa service
  service: name=uchiwa state=started enabled=yes
