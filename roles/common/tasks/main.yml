---

- include: redhat.yml
  when: ansible_os_family == "RedHat"

- include: debian.yml
  when: ansible_os_family == "Debian"

- name: add groups
  group: name={{ item }} state=present
  with_items:
    - ssh_users
    - admins
  tags:
    - users

- name: add users
  user: name={{ item.0.name }} groups={{ item.1 }} append=yes
  with_subelements:
    - users
    - roles
  tags:
    - users

- name: add ssh keys
  authorized_key: user={{ item.0.name }}
                  key="{{ lookup('file', item.1) }}"
                  manage_dir=yes
                  state=present
  with_subelements:
    - users
    - keys
  tags:
    - users

- name: add deploy user to ssh_users
  user: name={{ deploy_user }} groups=ssh_users append=yes
  tags:
    - users

- name: add pretty colourful PS1
  lineinfile: dest=/home/{{ item.name }}/.bashrc
              state=present
              regexp="^PS1="
              line="PS1='\[\e[0;32m\]\u@\h\[\e[m\] \[\e[1;34m\]\w\[\e[m\] \[\e[1;32m\]\$\[\e[m\] \[\e[1;37m\]'"
  with_items:
    - "{{ users }}"
  tags:
    - users

- name: add pretty colourful PS1 for root
  lineinfile: dest=/root/.bashrc
              state=present
              regexp="^PS1="
              line="PS1='\[\e[0;31m\]\u@\h\[\e[m\] \[\e[1;34m\]\w\[\e[m\] \[\e[1;32m\]\$\[\e[m\]\[\e[1;37m\] '"
  tags:
    - users

- name: copy basic vimrc over
  copy: src=../files/.vimrc dest=/home/{{ item.name }}/.vimrc
  with_items:
    - "{{ users }}"
  tags:
    - users

# Copy sshd config over
# TO DO: Get the main ipv4 and ipv6 addresses and put them in as the listen addresses?
- name: Install sshd config file
  template: src=sshd_config.j2 dest=/etc/ssh/sshd_config
  notify: restart sshd

- name: start ntp
  service: name=ntpd state=started enabled=yes
  tags:
    - ntp

- name: copy fail2ban ssh jail config across
  template: src=sshd.local.j2 dest=/etc/fail2ban/jail.d/sshd.local
  notify: restart fail2ban
  tags: fail2ban

- name: copy fail2ban fail2ban jail config across
  template: src=fail2ban.local.j2 dest=/etc/fail2ban/jail.d/fail2ban.local
  notify: restart fail2ban
  tags: fail2ban

- name: copy fail2ban fail2ban filter across
  copy: src=../files/fail2ban.conf dest=/etc/fail2ban/filter.d/fail2ban.conf
  notify: restart fail2ban
  tags:
    - fail2ban

# The service will fail to start if the log doesn't exist and since we
# haven't started the service before it won't. First touch it
- name: create fail2ban.log
  file: path=/var/log/fail2ban.log state=touch
  tags:
    - fail2ban

- name: start fail2ban and ensure enabled=yes
  service: name=fail2ban state=started enabled=yes
  tags:
    - fail2ban
